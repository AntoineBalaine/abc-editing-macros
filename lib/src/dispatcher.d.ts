import { abcText, annotationStyle } from "./annotationsActions";
import { contextObj, TransformFunction } from "./transformPitches";
import { ParseFunction as ParseFunction } from "./parseNomenclature";
export declare const NOTES_LOWERCASE: string[];
export declare const NOTES_UPPERCASE: string[];
export declare const isLetter: (char: string) => boolean;
export declare const isNoteToken: (char: string) => boolean;
export declare const isOctaveToken: (char: string) => boolean;
export declare const isAlterationToken: (char: string) => boolean;
export declare const isPitchToken: (char: string) => boolean;
export declare const isRhythmToken: (text: abcText) => boolean;
export declare const isRest: (char: abcText) => boolean;
export declare const isTie: (char: abcText) => boolean;
export declare const isDecoration: (char: abcText) => boolean;
export declare const isArticulation: (text: abcText, context: contextObj) => boolean;
export declare type noteDispatcherProps = {
    text: abcText;
    context: contextObj;
    transformFunction: TransformFunction;
    parseFunction?: ParseFunction;
    tag?: annotationStyle;
};
export declare type dispatcherFunction = ({ text, context, transformFunction, tag, }: noteDispatcherProps) => string;
export declare const findTokenType: (text: abcText, context: contextObj) => "note" | "rest" | "articulation" | "space" | "barLine" | "annotation" | "symbol" | "nomenclature line" | "nomenclature tag" | "chord" | "unmatched" | "end";
export declare const noteDispatcher: dispatcherFunction;
export declare const chordDispatcher: dispatcherFunction;
export declare const restDispatcher: dispatcherFunction;
