"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transposeStepUpTransform = exports.transposeStepDownTransform = exports.transposeHalfStepUpTransform = exports.transposeHalfStepDownTransform = exports.separateHeaderAndBody = exports.reorderChord = exports.parseUniqueTags = exports.parseRhythmToken = exports.parseNote = exports.parseAnnotation = exports.octaviateUpTransform = exports.octaviateDownTransform = exports.NOTES_UPPERCASE = exports.NOTES_LOWERCASE = exports.noteHeight = exports.jumpToEndOfSymbol = exports.jumpToEndOfNomenclatureTag = exports.jumpToEndOfNomenclatureLine = exports.isRhythmToken = exports.isPitchToken = exports.isOctaveToken = exports.isNoteToken = exports.isNomenclatureTag = exports.isNomenclatureLine = exports.isLowerCase = exports.isLetter = exports.isHeaderLine = exports.isAlterationToken = exports.instrumentFamilies = exports.findUnalteredPitch = exports.findNotesInKey = exports.findKeySignature = exports.findInstrumentCalls = exports.duplicateLengthTransform = exports.divideLengthTransform = exports.dispatcher = exports.createOrUpdateInstrumentationRoutine = exports.createOrUpdateHarmonizationRoutine = exports.convertToRestTransform = exports.convertToEnharmoniaTransform = exports.consolidateConsecutiveNotesTransform = exports.buildBodyFromInstruments = exports.annotationCommandEnum = exports.addNomenclatureToHeader = void 0;
const transformChords_1 = require("./src/transformChords");
Object.defineProperty(exports, "reorderChord", { enumerable: true, get: function () { return transformChords_1.reorderChord; } });
const transformRests_1 = require("./src/transformRests");
Object.defineProperty(exports, "consolidateConsecutiveNotesTransform", { enumerable: true, get: function () { return transformRests_1.consolidateConsecutiveNotesTransform; } });
Object.defineProperty(exports, "duplicateLengthTransform", { enumerable: true, get: function () { return transformRests_1.duplicateLengthTransform; } });
Object.defineProperty(exports, "divideLengthTransform", { enumerable: true, get: function () { return transformRests_1.divideLengthTransform; } });
const dispatcher_1 = require("./src/dispatcher");
Object.defineProperty(exports, "isLetter", { enumerable: true, get: function () { return dispatcher_1.isLetter; } });
Object.defineProperty(exports, "isNoteToken", { enumerable: true, get: function () { return dispatcher_1.isNoteToken; } });
Object.defineProperty(exports, "isOctaveToken", { enumerable: true, get: function () { return dispatcher_1.isOctaveToken; } });
Object.defineProperty(exports, "isAlterationToken", { enumerable: true, get: function () { return dispatcher_1.isAlterationToken; } });
Object.defineProperty(exports, "isPitchToken", { enumerable: true, get: function () { return dispatcher_1.isPitchToken; } });
Object.defineProperty(exports, "isRhythmToken", { enumerable: true, get: function () { return dispatcher_1.isRhythmToken; } });
Object.defineProperty(exports, "NOTES_LOWERCASE", { enumerable: true, get: function () { return dispatcher_1.NOTES_LOWERCASE; } });
Object.defineProperty(exports, "NOTES_UPPERCASE", { enumerable: true, get: function () { return dispatcher_1.NOTES_UPPERCASE; } });
Object.defineProperty(exports, "dispatcher", { enumerable: true, get: function () { return dispatcher_1.dispatcher; } });
const parseNomenclature_1 = require("./src/parseNomenclature");
Object.defineProperty(exports, "isNomenclatureTag", { enumerable: true, get: function () { return parseNomenclature_1.isNomenclatureTag; } });
Object.defineProperty(exports, "isNomenclatureLine", { enumerable: true, get: function () { return parseNomenclature_1.isNomenclatureLine; } });
Object.defineProperty(exports, "jumpToEndOfNomenclatureTag", { enumerable: true, get: function () { return parseNomenclature_1.jumpToEndOfNomenclatureTag; } });
Object.defineProperty(exports, "jumpToEndOfNomenclatureLine", { enumerable: true, get: function () { return parseNomenclature_1.jumpToEndOfNomenclatureLine; } });
Object.defineProperty(exports, "jumpToEndOfSymbol", { enumerable: true, get: function () { return parseNomenclature_1.jumpToEndOfSymbol; } });
const parsekeySignature_1 = require("./src/parsekeySignature");
Object.defineProperty(exports, "findKeySignature", { enumerable: true, get: function () { return parsekeySignature_1.findKeySignature; } });
Object.defineProperty(exports, "findUnalteredPitch", { enumerable: true, get: function () { return parsekeySignature_1.findUnalteredPitch; } });
Object.defineProperty(exports, "findNotesInKey", { enumerable: true, get: function () { return parsekeySignature_1.findNotesInKey; } });
const annotationsActions_1 = require("./src/annotationsActions");
Object.defineProperty(exports, "annotationCommandEnum", { enumerable: true, get: function () { return annotationsActions_1.annotationCommandEnum; } });
Object.defineProperty(exports, "instrumentFamilies", { enumerable: true, get: function () { return annotationsActions_1.instrumentFamilies; } });
Object.defineProperty(exports, "findInstrumentCalls", { enumerable: true, get: function () { return annotationsActions_1.findInstrumentCalls; } });
Object.defineProperty(exports, "createOrUpdateHarmonizationRoutine", { enumerable: true, get: function () { return annotationsActions_1.createOrUpdateHarmonizationRoutine; } });
Object.defineProperty(exports, "createOrUpdateInstrumentationRoutine", { enumerable: true, get: function () { return annotationsActions_1.createOrUpdateInstrumentationRoutine; } });
Object.defineProperty(exports, "parseUniqueTags", { enumerable: true, get: function () { return annotationsActions_1.parseUniqueTags; } });
Object.defineProperty(exports, "parseAnnotation", { enumerable: true, get: function () { return annotationsActions_1.parseAnnotation; } });
const fileStructureActions_1 = require("./src/fileStructureActions");
Object.defineProperty(exports, "isHeaderLine", { enumerable: true, get: function () { return fileStructureActions_1.isHeaderLine; } });
Object.defineProperty(exports, "separateHeaderAndBody", { enumerable: true, get: function () { return fileStructureActions_1.separateHeaderAndBody; } });
Object.defineProperty(exports, "addNomenclatureToHeader", { enumerable: true, get: function () { return fileStructureActions_1.addNomenclatureToHeader; } });
Object.defineProperty(exports, "buildBodyFromInstruments", { enumerable: true, get: function () { return fileStructureActions_1.buildBodyFromInstruments; } });
const transformPitches_1 = require("./src/transformPitches");
Object.defineProperty(exports, "isLowerCase", { enumerable: true, get: function () { return transformPitches_1.isLowerCase; } });
Object.defineProperty(exports, "octaviateDownTransform", { enumerable: true, get: function () { return transformPitches_1.octaviateDownTransform; } });
Object.defineProperty(exports, "octaviateUpTransform", { enumerable: true, get: function () { return transformPitches_1.octaviateUpTransform; } });
Object.defineProperty(exports, "convertToRestTransform", { enumerable: true, get: function () { return transformPitches_1.convertToRestTransform; } });
Object.defineProperty(exports, "noteHeight", { enumerable: true, get: function () { return transformPitches_1.noteHeight; } });
Object.defineProperty(exports, "convertToEnharmoniaTransform", { enumerable: true, get: function () { return transformPitches_1.convertToEnharmoniaTransform; } });
Object.defineProperty(exports, "transposeHalfStepDownTransform", { enumerable: true, get: function () { return transformPitches_1.transposeHalfStepDownTransform; } });
Object.defineProperty(exports, "transposeHalfStepUpTransform", { enumerable: true, get: function () { return transformPitches_1.transposeHalfStepUpTransform; } });
Object.defineProperty(exports, "transposeStepUpTransform", { enumerable: true, get: function () { return transformPitches_1.transposeStepUpTransform; } });
Object.defineProperty(exports, "transposeStepDownTransform", { enumerable: true, get: function () { return transformPitches_1.transposeStepDownTransform; } });
const parseNotes_1 = require("./src/parseNotes");
Object.defineProperty(exports, "parseRhythmToken", { enumerable: true, get: function () { return parseNotes_1.parseRhythmToken; } });
Object.defineProperty(exports, "parseNote", { enumerable: true, get: function () { return parseNotes_1.parseNote; } });
